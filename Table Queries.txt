CREATE TABLE Branch (
    branch_id char(7) PRIMARY KEY,
    branch_name varchar(30) ,
    location varchar(30),
    branch_phone_number char(10) ,
    status Boolean 
);
CREATE TYPE etype AS ENUM('Agent','Branch Manager','Admin');
CREATE TABLE Employee(
    employee_id char(10) PRIMARY KEY,
    name varchar(50),
    nic varchar(12),
    phone_number char(10),
    address varchar(255),
    date_started date,
    last_login_time timestamp,
    type etype,
    status boolean,
    branch_id char(7) REFERENCES Branch(branch_id)    
);


CREATE TABLE Token(
    token_id varchar(128) PRIMARY KEY,
    token_value varchar(255),
    created_time timestamp,
    last_used timestamp,
    employee_id char(10) REFERENCES Employee(employee_id)
);

CREATE TABLE Authentication(
    username varchar(30) PRIMARY KEY,
    password varchar(255),
    type etype,
    employee_id char(10) REFERENCES Employee(employee_id)
);

CREATE TABLE Customer(
    customer_id char(10) PRIMARY KEY,
    name varchar(50),
    nic  varchar(12),
    phone_number char(10),
    address varchar(255),
    date_of_birth date,
    email varchar(255),
    status boolean,
    employee_id char(10) REFERENCES Employee(employee_id)
);
CREATE TYPE stype AS ENUM('Children','Teen','Adult','Senior','Joint');
CREATE TABLE SavingsAccount_Plans(
   s_plan_id char(5) PRIMARY KEY,
   plan_name stype,
   interest_rate char(5),
   min_balance numeric(12,2)
);


CREATE TABLE SavingsAccount(
    saving_account_id char(10) PRIMARY KEY,
    open_date timestamp,
    balance numeric(12,2),
    employee_id char(10) REFERENCES Employee(employee_id),
    s_plan_id char(5) REFERENCES SavingsAccount_Plans(s_plan_id),
    status boolean,
    branch_id char(7) REFERENCES Branch(branch_id)
);

CREATE TABLE FixedDeposit_Plans(
   f_plan_id char(5) PRIMARY KEY ,
   months varchar(15),
   interest_rate char(5)
);

CREATE TABLE FixedDeposit(
   fixed_deposit_id char(10) PRIMARY KEY ,
   saving_account_id char(10) REFERENCES SavingsAccount(saving_account_id),
   f_plan_id char(5) REFERENCES FixedDeposit_Plans(f_plan_id),
   start_date timestamp,
   end_date timestamp,
   principal_amount numeric(12,2),
   interest_payment_type boolean,
   last_payout_date timestamp,
   status boolean
);

CREATE TABLE AccountHolder(
   holder_id char(10) PRIMARY KEY,
   customer_id char(10)REFERENCES Customer(customer_id),
   saving_account_id char(10) REFERENCES SavingsAccount(saving_account_id)
);
CREATE TYPE transtype AS ENUM('Interest','Withdrawal','Deposit');
CREATE TABLE Transactions(
   transaction_id int PRIMARY KEY,
   holder_id char(10) REFERENCES AccountHolder(holder_id),
   type transtype,
   amount numeric(12,2),
   timestamp timestamp,
   ref_number int,
   description varchar(255));

-- Branch
CREATE INDEX idx_branch_name ON Branch(branch_name);
CREATE INDEX idx_branch_location ON Branch(location);

-- Employee
CREATE INDEX idx_employee_branch_id ON Employee(branch_id);
CREATE INDEX idx_employee_nic ON Employee(nic);
CREATE INDEX idx_employee_phone ON Employee(phone_number);

-- Token
CREATE INDEX idx_token_employee_id ON Token(employee_id);

-- Authentication
CREATE INDEX idx_auth_employee_id ON Authentication(employee_id);

-- Customer
CREATE INDEX idx_customer_nic ON Customer(nic);
CREATE INDEX idx_customer_phone ON Customer(phone_number);
CREATE INDEX idx_customer_email ON Customer(email);
CREATE INDEX idx_customer_employee_id ON Customer(employee_id);

-- SavingsAccount
CREATE INDEX idx_savings_employee_id ON SavingsAccount(employee_id);
CREATE INDEX idx_savings_plan_id ON SavingsAccount(s_plan_id);
CREATE INDEX idx_savings_branch_id ON SavingsAccount(branch_id);

-- FixedDeposit
CREATE INDEX idx_fd_saving_account_id ON FixedDeposit(saving_account_id);
CREATE INDEX idx_fd_plan_id ON FixedDeposit(f_plan_id);

-- AccountHolder
CREATE INDEX idx_holder_customer_id ON AccountHolder(customer_id);
CREATE INDEX idx_holder_saving_account_id ON AccountHolder(saving_account_id);

-- Transactions
CREATE INDEX idx_transaction_holder_id ON Transactions(holder_id);
CREATE INDEX idx_transaction_timestamp ON Transactions(timestamp);
CREATE INDEX idx_transaction_ref_number ON Transactions(ref_number);



